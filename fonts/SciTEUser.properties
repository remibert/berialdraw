FONT=font:Consolas,size:9
#~  FONT=font:Berial,size:9
#ABCDEFGHIJKLMNOPQRSTUVWXYZ|{([_°äÄÂ
#abcdefghijklmnopqrstuvwxyz|{([_°ää
#0123456789
; /abcdefghijklmnopqrstuvwxyz|{([_°ää
#ABCDEFGHIJKLMNOPQRSTUVWXYZ|{([_°äÄÂg
#~  FONT=font:Courier     New,size:8
PORTABLE=X:\Portable
#~  selection.multiple=1
#~  import abaqus
#~  import ada
import asm
#~  import asn1
import au3
#~  import ave
#~  import baan
#~  import freebasic
#~  import blitzbasic
#~  import bullant
#~  import caml
import conf
#~  import cobol
import cpp
import cmake
#~  import csound
import css
#~  import d
#~  import eiffel
#~  import erlang
#~  import escript
#~  import flagship
#~  import forth
#~  import fortran
#~  import gap
import html
import inno
#~  import kix
#~  import lisp
#~  import lot
#~  import lout
import lua
#~  import matlab
#~  import metapost
#~  import mmixal
#~  import modula3
#~  import nimrod
#~  import nncrontab
import nsis
#~  import opal
import others
#~  import pascal
#~  import perl
#~  import pov
#~  import powerpro
#~  import powershell
import ps
#~  import purebasic
import python
#~  import r
#~  import rebol
#~  import ruby
#~  import scriptol
#~  import smalltalk
#~  import spice
import sql
#~  import specman
#~  import tacl
#~  import tal
#~  import tcl
#~  import txt2tags
#~  import tex
import vb
#~  import yaml
#~  import verilog
#~  import vhdl


########################################################################
# ASSEMBLER
########################################################################
file.patterns.asm=*.asm;*.inc;*.s
 
########################################################################
# CPP
########################################################################
file.patterns.cpp=*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hpp;*.hxx;*.sma;*.y;*.inl;*.FonPrj
filter.cpp=C/C++ ($(file.patterns.cpp);$(file.patterns.rc))|$(file.patterns.cpp);$(file.patterns.rc)|
lexer.$(file.patterns.cpp)=cpp
keywords.$(file.patterns.cpp)=$(keywordclass.cpp)
colour.code.comment.doc=fore:#1F501F,back:#FBF7FB  ; Doxygen comment
style.cpp.17=fore:#3060A0,back:#FBF7FB             ; Doxygen comment
fold.comment=1

########################################################################
# PROTOBUF
########################################################################
keywordclass.proto=double float int32 int64 uint32 uint64 sint32 sint64 fixed32 fixed64 sfixed32 sfixed64 bool string bytes message extensions to \
extend optional package import repeated required enum service rpc returns default option cc_generic_services max optimize_for group \
java_package packed true false java_outer_classname
keywords.$(file.patterns.proto)=$(keywordclass.proto)
file.patterns.proto=*.proto
lexer.$(file.patterns.proto)=cpp


########################################################################
# OUT
########################################################################
file.patterns.out=*.out;*.ref;*.log
filter.out=Out ($(file.patterns.out))|$(file.patterns.out)|
lexer.$(file.patterns.out)=errorlist
keywords.$(file.patterns.out)=$(keywordclass.out)


########################################################################
# ASM PIC
########################################################################
cpu_instruction=ANDLW LFSR MULLW MOVLW MOVLB ADDLW ADDWF ADDWFC ANDWF CLRF COMF CPFSEQ CPFSGT CPFSLT DECF DECFSZ DCFSNZ INCF INCFZ INFSNZ IORWF MOVF MOVFF MOVWF MULWF NEGF RLCF RLNCF RRCF RRNCF SETF SUBFWB SUBWF SUBWFB SWAPF TSTFSZ XORWF BCF BSF BTFSC BTFSS BTG BC BN BNC BNN BNOV BNZ BOZ BRA BZ CALL CLRWDT DAW GOTO IORLW NOP POP PUSH RCALL RESET RETFIE RETLW RETURN SLEEP SUBLW XORLW andlw lfsr mullw movlw movlb addlw addwf addwfc andwf clrf comf cpfseq cpfsgt cpfslt decf decfsz dcfsnz incf incfz infsnz iorwf movf movff movwf mulwf negf rlcf rlncf rrcf rrncf setf subfwb subwf subwfb swapf tstfsz xorwf bcf bsf btfsc btfss btg bc bn bnc bnn bnov bnz boz bra bz call clrwdt daw goto iorlw nop pop push rcall reset retfie retlw return sleep sublw xorlw
file.patterns.asm=*.asm;*.inc
filter.asm=Assembler (asm)|$(file.patterns.asm)|
lexer.$(file.patterns.asm)=asm
directive=.186 .286 .286c .286p .287 .386 .386c .386p .387 .486 .486p .8086 .8087 .alpha .break .code .const .continue .cref .data .data? .dosseg .else .elseif .endif .endw .err .err1 .err2 .errb .errdef .errdif .errdifi .erre .erridn .erridni .errnb .errndef .errnz .exit .fardata .fardata? .if .lall .lfcond .list .listall .listif .listmacro .listmacroall  .model .no87 .nocref .nolist .nolistif .nolistmacro .radix .repeat .sall .seq .sfcond .stack .startup .tfcond .type .until .untilcxz .while .xall .xcref .xlist alias align assume catstr comm comment db dd df dosseg dq dt dup dw echo else elseif elseif1 elseif2 elseifb elseifdef elseifdif elseifdifi elseife elseifidn elseifidni elseifnb elseifndef end endif endm endp ends eq equ even exitm extern externdef extrn for forc ge goto group gt high highword if if1 if2 ifb ifdef ifdif ifdifi ife  ifidn ifidni ifnb ifndef include includelib instr invoke irp irpc label le length lengthof local low lowword lroffset lt macro mask mod .msfloat name ne offset opattr option org %out page popcontext proc proto ptr public purge pushcontext record repeat rept seg segment short size sizeof sizestr struc struct substr subtitle subttl textequ this title type typedef union while width LIST list
style.asm.32=fore:#808080,font:Verdana,size:8,$(font.monospace) # Assembler Styles
style.asm.1=fore:#007F00,$(font.comment)                        # Comment 
style.asm.2=fore:#007F7F                                        # Number
style.asm.3=fore:#7F007F,$(font.monospace)                      # String
style.asm.4=$(colour.operator),bold                             # Operator
style.asm.5=fore:#7F0050                                        # Identifier


########################################################################
# VB
########################################################################
file.patterns.vb=*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;*.pag;*.dsr;*.dob;*.ebs;*.vbp;*.vbg;*.vbw
filter.vb=VB ($(file.patterns.vb))|$(file.patterns.vb)|
lexer.$(file.patterns.vb)=vb
keywords.$(file.patterns.vb)=$(keywordclass.vb)


########################################################################
# BATCH
########################################################################
if PLAT_WIN
	command.go.*.bat="$(FileDir)\$(FileNameExt)"  $(3)


########################################################################
# PYTHON
########################################################################
keywordclass.python=and as assert break class continue def del elif else except exec finally for from global if import in is lambda None not or pass print raise return try while self as join __import__ abs apply bool buffer callable chr cmp coerce compile complex delattr dir dict divmod eval execfile filter float getattr globals hasattr hash hex id input int intern isinstance issubclass len list locals long map max min oct open ord pow range raw_input reduce reload repr round setattr slice str tuple type unichr unicode vars xrange zip with yield True False async await
fold.comment.python=1
fold.quotes.python=1
file.patterns.python=*.py;*.pyw;*.pyx
filter.python=Python ($(file.patterns.python))|$(file.patterns.python)|
lexer.$(file.patterns.python)=python
keywords.$(file.patterns.python)=$(keywordclass.python)
if PLAT_WIN
	command.go.$(file.patterns.python)="$(PORTABLE)\python311\pythonw.exe" -u -B "$(FileDir)\$(FileNameExt)" $(1)
	command.go.subsystem.$(file.patterns.python)=1
	command.build.$(file.patterns.python)="$(PORTABLE)\python27\pythonw.exe" -u -B "$(FileDir)\$(FileNameExt)" $(1)
	command.build.subsystem.$(file.patterns.python)=1
style.python.0=fore:#e0e0e0
########################################################################
# Kotlin
########################################################################
keywordclass.kotlin=as break class continue do else false for fun if in interface is null \
	object package super this throw true try typealias typeof val var when while by catch \
		constructor delegate dynamic field file finally get import init param property \
	receiver set set param where actual abstract annotation companion const crossinline \
	data enum expect external final infix inline inner internal lateinit noinline return \
	open operator out override private protected public reified sealed suspend tailrec \
	vararg field it
fold.comment.kotlin=1
fold.quotes.kotlin=1
file.patterns.kotlin=*.kt;*.kts
filter.kotlin=kotlin ($(file.patterns.kotlin))|$(file.patterns.kotlin)|
lexer.$(file.patterns.kotlin)=cpp
keywords.$(file.patterns.kotlin)=$(keywordclass.kotlin)


########################################################################
# CSS
########################################################################
comment.block.css=//~


########################################################################
# MAKEFILE
########################################################################
file.patterns.make=makefile;makefile_vc;makefile_bor;*.mak;*.mk;Makefile;configure*;*.dsp
filter.makefile=Makefile ($(file.patterns.make))|$(file.patterns.make)|
lexer.$(file.patterns.make)=makefile
colour.error=fore:#FF0000,back:#FFFF00 # Makefile erreur sur les $(xx)


########################################################################
# PROPERTIES
########################################################################
file.patterns.props=*.properties;*.ini;*.inf;*.reg;*.url;*.cfg;*.cnf;*.aut;*.iss;*.prs
filter.properties=Properties (ini inf reg url cfg cnf)|$(file.patterns.props)|
lexer.$(file.patterns.props)=props


########################################################################
# QT USER INTERFACE
########################################################################
file.patterns.QtUI=*.ui;*.cw
filter.QtUI=Qt UI ($(file.patterns.QtUI))|$(file.patterns.QtUI)|
lexer.$(file.patterns.QtUI)=xml


########################################################################
# LOG
########################################################################
file.patterns.diff=*.diff;*.patch;*.log
filter.diff=Difference (diff patch)|$(file.patterns.diff)|
lexer.$(file.patterns.diff)=diff


########################################################################
# ERR
########################################################################
# gcc Error (Couleur de la ligne du find in files)
style.errorlist.2=fore:#7F0000
style.errorlist.1=fore:#FF0000

#~ ~0
style.errorlist.23=fore:#666666
#~ ~1
style.errorlist.24=fore:#990000
#~ ~2
style.errorlist.25=fore:#CC6600
#~ ~3
style.errorlist.26=fore:#CC9933
#~ ~4
style.errorlist.27=fore:#999900
#~ ~5
style.errorlist.28=fore:#009900
#~ ~6
style.errorlist.29=fore:#339999
#~ ~7
style.errorlist.30=fore:#3333ff
#~ ~8
style.errorlist.31=fore:#6600cc
#~ ~9
style.errorlist.17=fore:#993399
#~ ~A
style.errorlist.4=fore:#0000ff
#~ ~B
style.errorlist.10=fore:#ff0000
#~ ~C
style.errorlist.13=fore:#6666cc
#~ ~D
style.errorlist.11=fore:#33cc00
#~ ~E
style.errorlist.12=fore:#000099
#~ ~F
style.errorlist.18=fore:#006600

#~  ~0 La lumière visible est la partie du spectre électromagnétique qui est 
#~  ~1 visible pour l'il humain. Il n'y a pas de limite exacte au spectre 
#~  ~2 visible : l'il humain adapté à la lumière possède généralement une 
#~  ~3 sensibilité maximale à la lumière de longueur d'onde d'environ 550 nm, 
#~  ~4 ce qui correspond à une couleur jaune-verte. Généralement, on considère
#~  ~5 que la réponse de l'il couvre les longueurs d'ondes de 380 nm à 780 
#~  ~6 nm bien qu'une gamme de 400 nm à 700 nm soit plus commune. Cette gamme 
#~  ~7 de longueur d'onde est importante pour le monde vivant car des longueurs 
#~  ~8 d'ondes plus courtes que 380 nm endommageraient la structure des molécules 
#~  ~9 organiques tandis que celles plus longues que 720 nm seraient absorbées par l'eau
#~  ~A La lumière visible est la partie du spectre électromagnétique qui est 
#~  ~B visible pour l'il humain. Il n'y a pas de limite exacte au spectre 
#~  ~C visible : l'il humain adapté à la lumière possède généralement une 
#~  ~D sensibilité maximale à la lumière de longueur d'onde d'environ 550 nm, 
#~  ~E ce qui correspond à une couleur jaune-verte. Généralement, on considère
#~  ~F que la réponse de l'il couvre les longueurs d'ondes de 380 nm à 780 

########################################################################
# HTML
########################################################################
# Comment
style.hypertext.9=fore:#808000


########################################################################
# DIFF
########################################################################
# Line change (!...)
style.diff.7=fore:#007F00


########################################################################
# Windows parameters
########################################################################

# Windows sizes 
position.left=0
position.top=0

#~  position.width=1024                             # 1024*768
#~  position.height=740

;~  position.width=1152                             # 1152*864
;~  position.height=835

position.width=1280                             # 1280*768
position.height=740

;~  position.width=1280                             # 1280*1024
;~  position.height=1000

#~  position.width=1050                             # 1050*1680
#~  position.height=1650
;~  position.left=900
;~  position.top=-240

;~  position.width=1780                             # 1920*1200
;~  position.height=1168

load.on.activate=1                              # Check files changed in background
check.if.already.open=1                         # One instance of Scite




########################################################################
# Margin parameters
########################################################################
line.margin.visible=1                           # Line numbers displayed
line.margin.width=3+                            # Margin width
fold.symbols=3                                  # Sign of code folding


########################################################################
# Buffers tab bar parameters
########################################################################
buffers=500                                     # Maximum buffers number
tabbar.multiline=1                              # Multiline buffer tab
tabbar.visible=1                                # Buffer tab visible
tabbar.hide.one=1                               # Hide buffer for one file


########################################################################
# Status bar parameters
########################################################################
statusbar.visible=1                             # View status bar
statusbar.number=1                              # Status bar visible
statusbar.text.1=Ln:$(LineNumber) Col:$(ColumnNumber)	Sel:$(SelLength) chr, $(SelHeight) lines 	$(BufferLength) bytes, $(NbOfLines) lines |   \


########################################################################
# Edition parameters
########################################################################
view.whitespace=1                               # View spaces and tabs
whitespace.fore=#DFDFDF
wrap=0                                          # Wrap edition window
edge.column=88                                  # Edge ligne 
edge.mode=1                                     # Edge visible

# Tabulation
tabsize=4                                       # Tabulation size
indent.size=4                                   # Indentation size
use.tabs=1                                      # Tabulation usage
use.monospaced=1                                # Monospaced font

# Font windows
font.monospace=$(FONT)
font.base=$(FONT)
font.small=$(FONT)
font.comment=$(FONT)
font.vbs=$(FONT)
font.text=$(FONT)
eol.mode=CRLF

# Auto completion
autocomplete.choose.single=0                    # Auto completion
autocompleteword.automatic=1
xml.auto.close.tags=1                           # Automatique close tags
ensure.consistent.line.ends=1                   # Change the end of lines

# Comment
comment.block.=#~ 
comment.block.conf=#~ 
comment.block.props=#~ 

# Highlight parameters 
caret.line.back=#fff4f4                         # Current line highlight
style.*.34=fore:#0000FF,back:#00FFFF,bold       # Match paranthesis
style.*.35=fore:#FF0000,back:#FFFF00,bold       # Error paranthesis

# Find parameters
find.files=*.bat *.bdf *.err *.c *.cc *.cxx *.cpp *.cxx *.h *.hh *.hpp *.hxx *.i *.iss *.java *.js *.log *.properties *.py *.pyw *.txt *.xml *.y .teliumProject *.vcxproj .cproject .project *.T2 *.T3 *.proto *.sln *.mnf *.pbt *.kt *.kts
find.in.dot=0                                   # 1 then Find in Files searches in directories that start with '.'
find.in.binary=0                                # 1 then Find in Files displays matches in binary files
find.replace.advanced=1                         # Replace in all files opened
find.mark=#0000FF


########################################################################
# Output parameters
########################################################################
clear.before.execute=0                          # Clear output windows
time.commands=1                                 # Display execution time
split.vertical=0                                # Split orientation
output.wrap=0                                   # Wrap output window


#~  caret.line.back=#ffE6F0                         # Current line highlight


########################################################################
# Short cut (http://www.scintilla.org/CommandValues.html)
########################################################################
user.shortcuts=\
Ctrl+Shift+F2|IDM_BOOKMARK_CLEARALL|\
Ctrl+Shift+S|IDM_SAVEALL|\
Ctrl+Shift+W|IDM_CLOSEALL|\
Alt+U|IDM_OPENUSERPROPERTIES|



########################################################################
# Languages
########################################################################
menu.language=\
#~  FreeBasic|bas||\
Text|txt||\
#~  Ada|ads||\
#~  Apache Confi&g|conf||\
#~  Assembler|asm||\
#~  ASN.1|asn1||\
#~  Avenue|ave||\
#~  Baan|bc||\
&Batch|bat||\
#~  Bullant|ant||\
&C / C++|c||\
CMake|cmake||\
C&#|cs||\
#~  COBOL|cob||\
#~  Csound|orc||\
CSS|css||\
#~  D|d||\
&Difference|diff||\
#~  &Eiffel|e||\
#~  Erlang|erl||\
&Errorlist|err|Shift+F11|\
#~  FlagShip|prg||\
#~  Forth|forth||\
#~  &Fortran|f90||\
#~  Gap|g||\
H&ypertext|html|F12|\
&InnoSetup|iss||\
&Java|java||\
&Kotlin|kt||\
Java&Script|js||\
#~  &Kix|kix||\
#~  TeX|tex||\
#~  Lisp|lisp||\
#~  Lot|lot||\
#~  Lout|lt||\
#~  Lu&a|lua||\
#~  Matlab|m.matlab||\
&Makefile|mak|Ctrl+Shift+F11|\
#~  MetaPost|mp||\
#~  MMIXAL|mms||\
#~  &nnCron crontab|tab||\
NSIS|nsis||\
#~  Objective Caml|ml||\
#~  Octave|m.octave||\
#~  Opal|impl||\
#~  Pascal|pas||\
#~  Pe&rl|pl||\
#~  P&HP|php||\
#~  P&LSQL|spec||\
#~  P&ostScript|ps||\
#~  P&OV-Ray SDL|pov||\
#~  PowerShell|ps1||\
#~  PowerPro|powerpro||\
&Properties|properties||\
Pytho&n|py||\
#~  R|R||\
Reso&urce|rc||\
#~  Ruby|rb||\
#~  Shell|sh||\
#~  S&QL|sql||\
#~  Specman|e||\
#~  &TCL|tcl||\
#~  &VB|vb||\
#~  VBScr&ipt|vbs||\
#~  Verilog|v||\
#~  VHDL|vhd||\
&XML|xml|Shift+F12|\
#~  YAML|yaml||\
Protobuf|proto||

# Open files filters
open.filter=$(all.files) $(filter.kotlin) $(filter.nsis) $(filter.text) $(filter.cpp) $(filter.python) $(filter.conf) $(filter.bash) $(filter.css) $(filter.java) $(filter.js) $(filter.php) $(filter.properties) $(filter.sql) $(filter.tcl) $(filter.vb) $(filter.asn1) $(filter.web) $(filter.au3) $(filter.out) $(filter.proto) 
 
lexer.cpp.track.preprocessor=0
lexer.cpp.hashquoted.strings=1


command.compile.*.java=T:\Tools\java\jdk-11.0.11x64\bin\javac $(FileNameExt) 
command.build.*.java=T:\Tools\java\jdk-11.0.11x64\bin\javac *.java -classpath .;..\..\lib\java\jgraphics.jar 
command.go.*.java=T:\Tools\java\jdk-11.0.11x64\bin\java -cp .;..\..\lib\java\jgraphics.jar -Djava.library.path=..\..\lib\win64_msvc2010\Debug $(FileName)

# Commands:
keywords.$(file.patterns.cmake)= add_custom_command \
add_compile_definitions \
add_compile_options \
add_custom_command \
add_custom_target \
add_definitions \
add_dependencies \
add_executable \
add_library \
add_link_options \
add_subdirectory \
add_test \
aux_source_directory \
build_command \
build_name \
cmake_minimum_required \
configure_file \
create_test_sourcelist \
else \
elseif \
enable_language \
enable_testing \
endforeach \
endfunction \
endif \
endmacro \
endwhile \
exec_program \
execute_process \
export \
export_library_dependencies \
file \
find_file \
find_library \
find_package \
find_path \
find_program \
fltk_wrap_ui \
foreach \
function \
get_cmake_property \
get_directory_property \
get_filename_component \
get_source_file_property \
get_target_property \
get_test_property \
if \
include \
include_directories \
include_external_msproject \
include_regular_expression \
install \
install_files \
install_programs \
install_targets \
link_directories \
link_libraries \
list \
load_cache \
load_command \
macro \
make_directory \
mark_as_advanced \
math \
message \
option \
output_required_files \
project \
qt_wrap_cpp \
qt_wrap_ui \
remove \
remove_definitions \
separate_arguments \
set \
set_directory_properties \
set_source_files_properties \
set_target_properties \
set_tests_properties \
site_name \
source_group \
string \
subdir_depends \
subdirs \
target_compile_definitions \
target_compile_features \
target_compile_options \
target_include_directories \
target_link_directories \
target_link_libraries \
target_link_options \
target_sources \
try_compile \
try_run \
use_mangled_mesa \
utility_source \
variable_requires \
vtk_make_instantiator \
vtk_wrap_java \
vtk_wrap_python \
vtk_wrap_tcl \
while \
write_file
